import streamlit as st
from number_generator import get_generated_numbers, get_most_frequent_numbers, get_last_winning_games
from lotoFacil import gerar_numeros_sorteados
import pandas as pd

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Gerador de Loterias", page_icon="üçÄ", layout="wide")

# Menu lateral
opcao = st.sidebar.radio("Escolha a loteria", ["Mega Sena", "Loto F√°cil"])

# Exibir a se√ß√£o correspondente com base na op√ß√£o selecionada
if opcao == "Mega Sena":
    # T√≠tulo
    st.title("Gerador de N√∫meros da Mega Sena")

    # Texto de boas-vindas
    st.markdown("""
    <p class='welcome-text'>
    Bem-vindo ao Gerador de N√∫meros da Mega Sena! Este aplicativo auxilia na gera√ß√£o de n√∫meros para o jogo de loteria Mega Sena da Loteria Federal do Governo Brasileiro.
    </p>
    """, unsafe_allow_html=True)

    # Criando colunas para os bot√µes principais e entrada de n√∫mero de dezenas
    col1, col2 = st.columns([1, 2])

    # Entrada para o n√∫mero de dezenas
    num_dezenas = col2.number_input("N√∫mero de dezenas", min_value=6, max_value=15, value=9, step=1)

    # Bot√£o "Gerar N√∫mero"
    if col1.button("Gerar N√∫mero"):
        with st.spinner("Gerando n√∫meros..."):
            generated_numbers = get_generated_numbers(num_dezenas)
        if generated_numbers:
            st.success(f"N√∫meros gerados baseados no hist√≥rico: {', '.join(map(str, generated_numbers))}")
        else:
            st.error("N√£o foi poss√≠vel gerar n√∫meros devido a um erro nos dados hist√≥ricos.")

    # Nova se√ß√£o com bot√µes adicionais
    st.markdown("---")  # Separador visual
    st.subheader("Outras op√ß√µes:")

    col3, col4 = st.columns(2)

    if col3.button("Cinco n√∫meros mais sorteados"):
        with st.spinner("Buscando os n√∫meros mais sorteados..."):
            most_frequent = get_most_frequent_numbers()
            if most_frequent:
                st.success("Os cinco n√∫meros mais sorteados s√£o:")

                # Criando um DataFrame para a tabela
                df_most_frequent = pd.DataFrame(most_frequent)
                df_most_frequent.columns = ['Posi√ß√£o', 'N√∫mero', 'Frequ√™ncia']
                df_most_frequent['Posi√ß√£o'] = df_most_frequent['Posi√ß√£o'].apply(lambda x: f"{x}¬∫")
                df_most_frequent['Frequ√™ncia'] = df_most_frequent['Frequ√™ncia'].apply(lambda x: f"{x} vezes")

                # Exibindo a tabela
                st.table(df_most_frequent)
            else:
                st.error("N√£o foi poss√≠vel obter os n√∫meros mais sorteados.")

    if col4.button("√öltimos 5 jogos ganhadores"):
        with st.spinner("Buscando os √∫ltimos jogos ganhadores..."):
            last_games = get_last_winning_games()
            if last_games:
                for game in last_games:
                    st.write(f"N√∫mero do jogo {game[0]}: {', '.join(map(str, game[1:]))}")
            else:
                st.error("N√£o foi poss√≠vel carregar os dados dos √∫ltimos jogos.")

elif opcao == "Loto F√°cil":
    # T√≠tulo
    st.title("Gerador de N√∫meros da Loto F√°cil")

    # Bot√£o "Gerar n√∫meros"
    if st.button("Gerar n√∫meros"):
        with st.spinner("Gerando n√∫meros..."):
            _, _, sugeridos = gerar_numeros_sorteados("loto_facil_asloterias_ate_concurso_3277_sorteio.xlsx")
        st.success(f"N√∫meros sugeridos: {', '.join(map(str, sugeridos))}")

    # Bot√£o "N√∫meros mais sorteados at√© hoje"
    if st.button("N√∫meros mais sorteados at√© hoje"):
        with st.spinner("Buscando n√∫meros mais sorteados..."):
            mais_sorteados_historico, _, _ = gerar_numeros_sorteados("loto_facil_asloterias_ate_concurso_3277_sorteio.xlsx")
        st.success(f"N√∫meros mais sorteados at√© hoje: {', '.join(map(str, mais_sorteados_historico))}")

    # Bot√£o "N√∫meros mais sorteados no m√™s atual"
    if st.button("N√∫meros mais sorteados no m√™s atual"):
        with st.spinner("Buscando n√∫meros mais sorteados no m√™s..."):
            _, mais_sorteados_mes, _ = gerar_numeros_sorteados("loto_facil_asloterias_ate_concurso_3277_sorteio.xlsx")
        st.success(f"N√∫meros mais sorteados no m√™s atual: {', '.join(map(str, mais_sorteados_mes))}")
